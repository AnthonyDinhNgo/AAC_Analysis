setwd("~/Repositories/AAC_Analysis")
# load the necessary package
library(shiny)
# load ui and server files
source("app_ui.R")
source("app_server.R")
# load ui and server files
source("app_ui.R")
# launch the shiny app
shinyApp(ui = ui, server = server)
# load ui and server files
source("app_ui.R")
source("app_server.R")
# launch the shiny app
shinyApp(ui = ui, server = server)
# load ui and server files
source("app_ui.R")
# launch the shiny app
shinyApp(ui = ui, server = server)
# load ui and server files
source("app_ui.R")
# launch the shiny app
shinyApp(ui = ui, server = server)
data <- read.csv(
file =
"data/aac_intakes_outcomes.csv",
encoding = "UTF-8",
stringsAsFactor = FALSE
)
View(data)
data %>% filter(animal_type == "Dog") %>% select(breed) %>% group_by(breed) %>% mutate(freq = sum(breed))
data %>% filter(animal_type == "Dog") %>% select(breed) %>% group_by(breed) %>% mutate(freq = length(breed))
df <- data %>% filter(animal_type == "Dog") %>% select(breed) %>% group_by(breed) %>% mutate(freq = length(breed)) %>% unique()
View(data)
View(df)
df <- data %>% filter(animal_type == "Dog") %>%
select(breed) %>%
group_by(breed) %>%
mutate(freq = length(breed)) %>%
unique() %>%
arrange(freq)
df <- data %>% filter(animal_type == "Dog") %>%
select(breed) %>%
group_by(breed) %>%
mutate(freq = length(breed)) %>%
unique() %>%
arrange(!freq)
?arrange
df <- data %>% filter(animal_type == "Dog") %>%
select(breed) %>%
group_by(breed) %>%
mutate(freq = length(breed)) %>%
unique() %>%
arrange(desc(freq))
View(df)
df <- data %>% filter(animal_type == "Dog") %>%
select(breed) %>%
group_by(breed) %>%
mutate(freq = length(breed)) %>%
unique() %>%
arrange(desc(freq)) %>%
head(25)
df %>% pull(breed)
# load ui and server files
source("app_ui.R")
# launch the shiny app
shinyApp(ui = ui, server = server)
# launch the shiny app
shinyApp(ui = ui, server = server)
# load ui and server files
source("app_ui.R")
# launch the shiny app
shinyApp(ui = ui, server = server)
df <- data %>% filter(animal_type == "Cat") %>%
select(breed) %>%
group_by(breed) %>%
mutate(freq = length(breed)) %>%
unique() %>%
arrange(desc(freq)) %>%
head(25)
df %>% pull(breed)
# load ui and server files
source("app_ui.R")
# launch the shiny app
shinyApp(ui = ui, server = server)
# load ui and server files
source("app_ui.R")
source("app_server.R")
# launch the shiny app
shinyApp(ui = ui, server = server)
# load ui and server files
source("app_ui.R")
# launch the shiny app
shinyApp(ui = ui, server = server)
