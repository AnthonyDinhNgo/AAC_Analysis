"Adoption",
"Return to Owner",
"Euthanasia",
"Died",
"Transfer"
)
df1 <- NULL
df2 <- NULL
if(outcome){
df1 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed1) %>%
mutate(
adoption_prop = (sum(outcome_type == "Adoption")/length(animal_type)),
return_to_owner_prop = (sum(outcome_type == "Return to Owner")/length(animal_type)),
euthanasia_prop = (sum(outcome_type == "Euthanasia")/length(animal_type)),
died_prop = (sum(outcome_type == "Died")/length(animal_type)),
transfer_prop = (sum(outcome_type == "Transfer")/length(animal_type))
) %>%
select(
adoption_prop,
return_to_owner_prop,
euthanasia_prop,
died_prop,
transfer_prop
) %>%
unique()
df2 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed2) %>%
mutate(
adoption_prop = (sum(outcome_type == "Adoption")/length(animal_type)),
return_to_owner_prop = (sum(outcome_type == "Return to Owner")/length(animal_type)),
euthanasia_prop = (sum(outcome_type == "Euthanasia")/length(animal_type)),
died_prop = (sum(outcome_type == "Died")/length(animal_type)),
transfer_prop = (sum(outcome_type == "Transfer")/length(animal_type))
) %>%
select(
adoption_prop,
return_to_owner_prop,
euthanasia_prop,
died_prop,
transfer_prop
) %>%
unique()
} else {
thet <- c(
"Stray",
"Public Assist",
"Owner Surrender",
"Euthanasia Request",
"wildlife"
)
df1 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed1) %>%
mutate(
stray_prop = (sum(intake_type == "Stray")/length(animal_type)),
public_assist_prop = (sum(intake_type == "Public Assist")/length(animal_type)),
owner_surr_prop = (sum(intake_type == "Owner Surrender")/length(animal_type)),
euth_req_prop = (sum(intake_type == "Euthanasia Request")/length(animal_type)),
wild_prop = (sum(intake_type == "Wildlife")/length(animal_type))
) %>%
select(
stray_prop,
public_assist_prop,
owner_surr_prop,
euth_req_prop,
wild_prop
) %>%
unique()
df2 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed2) %>%
mutate(
stray_prop = (sum(intake_type == "Stray")/length(animal_type)),
public_assist_prop = (sum(intake_type == "Public Assist")/length(animal_type)),
owner_surr_prop = (sum(intake_type == "Owner Surrender")/length(animal_type)),
euth_req_prop = (sum(intake_type == "Euthanasia REquest")/length(animal_type)),
wild_prop = (sum(intake_type == "Wildlife")/length(animal_type))
) %>%
select(
stray_prop,
public_assist_prop,
owner_surr_prop,
euth_req_prop,
wild_prop
) %>%
unique()
}
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself'
) %>%
add_trace(
r = as.numeric(as.vector(df1[1,])),
theta = thet,
name = breed1_name
)%>%
add_trace(
r = as.numeric(as.vector(df2[1,])),
theta = thet,
name = breed2_name
)%>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,1)
)
)
)
p
}
p <- radar(in_out_df, "All", "Airedale Terrier Mix", "Dog", F)
p
radar <- function(in_out_df, breed1_name, breed2_name, animal, outcome){
breed1 <- breed1_name
if(breed1 == "All"){
breed1 <- in_out_df %>%
filter(animal_type == animal) %>%
select(breed) %>%
unique() %>%
pull()
}
breed2 <- breed2_name
if(breed2 == "All"){
breed2 <- in_out_df %>%
filter(animal_type == animal) %>%
select(breed) %>%
unique() %>%
pull()
}
thet = c(
"Adoption",
"Return to Owner",
"Euthanasia",
"Died",
"Transfer"
)
df1 <- NULL
df2 <- NULL
if(outcome){
df1 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed1) %>%
mutate(
adoption_prop = (sum(outcome_type == "Adoption")/length(animal_type)),
return_to_owner_prop = (sum(outcome_type == "Return to Owner")/length(animal_type)),
euthanasia_prop = (sum(outcome_type == "Euthanasia")/length(animal_type)),
died_prop = (sum(outcome_type == "Died")/length(animal_type)),
transfer_prop = (sum(outcome_type == "Transfer")/length(animal_type))
) %>%
select(
adoption_prop,
return_to_owner_prop,
euthanasia_prop,
died_prop,
transfer_prop
) %>%
unique()
df2 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed2) %>%
mutate(
adoption_prop = (sum(outcome_type == "Adoption")/length(animal_type)),
return_to_owner_prop = (sum(outcome_type == "Return to Owner")/length(animal_type)),
euthanasia_prop = (sum(outcome_type == "Euthanasia")/length(animal_type)),
died_prop = (sum(outcome_type == "Died")/length(animal_type)),
transfer_prop = (sum(outcome_type == "Transfer")/length(animal_type))
) %>%
select(
adoption_prop,
return_to_owner_prop,
euthanasia_prop,
died_prop,
transfer_prop
) %>%
unique()
} else {
thet <- c(
"Stray",
"Public Assist",
"Owner Surrender",
"Euthanasia Request",
"Wildlife"
)
df1 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed1) %>%
mutate(
stray_prop = (sum(intake_type == "Stray")/length(animal_type)),
public_assist_prop = (sum(intake_type == "Public Assist")/length(animal_type)),
owner_surr_prop = (sum(intake_type == "Owner Surrender")/length(animal_type)),
euth_req_prop = (sum(intake_type == "Euthanasia Request")/length(animal_type)),
wild_prop = (sum(intake_type == "Wildlife")/length(animal_type))
) %>%
select(
stray_prop,
public_assist_prop,
owner_surr_prop,
euth_req_prop,
wild_prop
) %>%
unique()
df2 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed2) %>%
mutate(
stray_prop = (sum(intake_type == "Stray")/length(animal_type)),
public_assist_prop = (sum(intake_type == "Public Assist")/length(animal_type)),
owner_surr_prop = (sum(intake_type == "Owner Surrender")/length(animal_type)),
euth_req_prop = (sum(intake_type == "Euthanasia REquest")/length(animal_type)),
wild_prop = (sum(intake_type == "Wildlife")/length(animal_type))
) %>%
select(
stray_prop,
public_assist_prop,
owner_surr_prop,
euth_req_prop,
wild_prop
) %>%
unique()
}
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself'
) %>%
add_trace(
r = as.numeric(as.vector(df1[1,])),
theta = thet,
name = breed1_name
)%>%
add_trace(
r = as.numeric(as.vector(df2[1,])),
theta = thet,
name = breed2_name
)%>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,1)
)
)
)
p
}
p <- radar(in_out_df, "All", "Airedale Terrier Mix", "Dog", F)
p
p <- radar(in_out_df, "All", "Airedale Terrier Mix", "Dog", T)
p
radar <- function(in_out_df, breed1_name, breed2_name, animal, outcome){
breed1 <- breed1_name
if(breed1 == "All"){
breed1 <- in_out_df %>%
filter(animal_type == animal) %>%
select(breed) %>%
unique() %>%
pull()
}
breed2 <- breed2_name
if(breed2 == "All"){
breed2 <- in_out_df %>%
filter(animal_type == animal) %>%
select(breed) %>%
unique() %>%
pull()
}
title_var <- paste("Outcome Proportions of", breed1_name, "vs", breed2_name)
thet <-  c(
"Adoption",
"Return to Owner",
"Euthanasia",
"Died",
"Transfer"
)
df1 <- NULL
df2 <- NULL
if(outcome){
df1 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed1) %>%
mutate(
adoption_prop = (sum(outcome_type == "Adoption")/length(animal_type)),
return_to_owner_prop = (sum(outcome_type == "Return to Owner")/length(animal_type)),
euthanasia_prop = (sum(outcome_type == "Euthanasia")/length(animal_type)),
died_prop = (sum(outcome_type == "Died")/length(animal_type)),
transfer_prop = (sum(outcome_type == "Transfer")/length(animal_type))
) %>%
select(
adoption_prop,
return_to_owner_prop,
euthanasia_prop,
died_prop,
transfer_prop
) %>%
unique()
df2 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed2) %>%
mutate(
adoption_prop = (sum(outcome_type == "Adoption")/length(animal_type)),
return_to_owner_prop = (sum(outcome_type == "Return to Owner")/length(animal_type)),
euthanasia_prop = (sum(outcome_type == "Euthanasia")/length(animal_type)),
died_prop = (sum(outcome_type == "Died")/length(animal_type)),
transfer_prop = (sum(outcome_type == "Transfer")/length(animal_type))
) %>%
select(
adoption_prop,
return_to_owner_prop,
euthanasia_prop,
died_prop,
transfer_prop
) %>%
unique()
} else {
thet <- c(
"Stray",
"Public Assist",
"Owner Surrender",
"Euthanasia Request",
"Wildlife"
)
title_var <- paste("Intake Proportions of", breed1_name, "vs", breed2_name)
df1 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed1) %>%
mutate(
stray_prop = (sum(intake_type == "Stray")/length(animal_type)),
public_assist_prop = (sum(intake_type == "Public Assist")/length(animal_type)),
owner_surr_prop = (sum(intake_type == "Owner Surrender")/length(animal_type)),
euth_req_prop = (sum(intake_type == "Euthanasia Request")/length(animal_type)),
wild_prop = (sum(intake_type == "Wildlife")/length(animal_type))
) %>%
select(
stray_prop,
public_assist_prop,
owner_surr_prop,
euth_req_prop,
wild_prop
) %>%
unique()
df2 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed2) %>%
mutate(
stray_prop = (sum(intake_type == "Stray")/length(animal_type)),
public_assist_prop = (sum(intake_type == "Public Assist")/length(animal_type)),
owner_surr_prop = (sum(intake_type == "Owner Surrender")/length(animal_type)),
euth_req_prop = (sum(intake_type == "Euthanasia REquest")/length(animal_type)),
wild_prop = (sum(intake_type == "Wildlife")/length(animal_type))
) %>%
select(
stray_prop,
public_assist_prop,
owner_surr_prop,
euth_req_prop,
wild_prop
) %>%
unique()
}
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself'
) %>%
add_trace(
r = as.numeric(as.vector(df1[1,])),
theta = thet,
name = breed1_name
)%>%
add_trace(
r = as.numeric(as.vector(df2[1,])),
theta = thet,
name = breed2_name
)%>%
layout(
title = title_var,
polar = list(
radialaxis = list(
visible = T,
range = c(0,1)
)
)
)
p
}
p <- radar(in_out_df, "All", "Pug", "Dog", F)
p
radar <- function(in_out_df, breed1_name, breed2_name, animal, outcome){
breed1 <- breed1_name
if(breed1 == "All"){
breed1 <- in_out_df %>%
filter(animal_type == animal) %>%
select(breed) %>%
unique() %>%
pull()
}
breed2 <- breed2_name
if(breed2 == "All"){
breed2 <- in_out_df %>%
filter(animal_type == animal) %>%
select(breed) %>%
unique() %>%
pull()
}
title_var <- paste("Outcome Proportions")
thet <-  c(
"Adoption",
"Return to Owner",
"Euthanasia",
"Died",
"Transfer"
)
df1 <- NULL
df2 <- NULL
if(outcome){
df1 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed1) %>%
mutate(
adoption_prop = (sum(outcome_type == "Adoption")/length(animal_type)),
return_to_owner_prop = (sum(outcome_type == "Return to Owner")/length(animal_type)),
euthanasia_prop = (sum(outcome_type == "Euthanasia")/length(animal_type)),
died_prop = (sum(outcome_type == "Died")/length(animal_type)),
transfer_prop = (sum(outcome_type == "Transfer")/length(animal_type))
) %>%
select(
adoption_prop,
return_to_owner_prop,
euthanasia_prop,
died_prop,
transfer_prop
) %>%
unique()
df2 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed2) %>%
mutate(
adoption_prop = (sum(outcome_type == "Adoption")/length(animal_type)),
return_to_owner_prop = (sum(outcome_type == "Return to Owner")/length(animal_type)),
euthanasia_prop = (sum(outcome_type == "Euthanasia")/length(animal_type)),
died_prop = (sum(outcome_type == "Died")/length(animal_type)),
transfer_prop = (sum(outcome_type == "Transfer")/length(animal_type))
) %>%
select(
adoption_prop,
return_to_owner_prop,
euthanasia_prop,
died_prop,
transfer_prop
) %>%
unique()
} else {
thet <- c(
"Stray",
"Public Assist",
"Owner Surrender",
"Euthanasia Request",
"Wildlife"
)
title_var <- paste("Intake Proportions")
df1 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed1) %>%
mutate(
stray_prop = (sum(intake_type == "Stray")/length(animal_type)),
public_assist_prop = (sum(intake_type == "Public Assist")/length(animal_type)),
owner_surr_prop = (sum(intake_type == "Owner Surrender")/length(animal_type)),
euth_req_prop = (sum(intake_type == "Euthanasia Request")/length(animal_type)),
wild_prop = (sum(intake_type == "Wildlife")/length(animal_type))
) %>%
select(
stray_prop,
public_assist_prop,
owner_surr_prop,
euth_req_prop,
wild_prop
) %>%
unique()
df2 <- in_out_df %>%
filter(animal_type == animal, breed %in% breed2) %>%
mutate(
stray_prop = (sum(intake_type == "Stray")/length(animal_type)),
public_assist_prop = (sum(intake_type == "Public Assist")/length(animal_type)),
owner_surr_prop = (sum(intake_type == "Owner Surrender")/length(animal_type)),
euth_req_prop = (sum(intake_type == "Euthanasia REquest")/length(animal_type)),
wild_prop = (sum(intake_type == "Wildlife")/length(animal_type))
) %>%
select(
stray_prop,
public_assist_prop,
owner_surr_prop,
euth_req_prop,
wild_prop
) %>%
unique()
}
p <- plot_ly(
type = 'scatterpolar',
fill = 'toself'
) %>%
add_trace(
r = as.numeric(as.vector(df1[1,])),
theta = thet,
name = breed1_name
)%>%
add_trace(
r = as.numeric(as.vector(df2[1,])),
theta = thet,
name = breed2_name
)%>%
layout(
title = title_var,
polar = list(
radialaxis = list(
visible = T,
range = c(0,1)
)
)
)
p
}
p <- radar(in_out_df, "All", "Pug", "Dog", F)
p
p <- radar(in_out_df, "All", "Pug", "Dog", T)
p
