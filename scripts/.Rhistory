"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog", "Cat"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style(hoverlabel = list(bgcolor = "white"), hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog", "Cat"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style(hoverlabel = list(bgcolor = "white"), hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog", "Cat"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog"), T)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type), fill = "red")+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type, color = "red"))+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type, fill = "red"))+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type))+
scale_color_manual(values=c("#CC6666"))+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type))+
scale_color_manual(values=c("red"))+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
?scale_color_manual
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type))+
scale_color_manual(values=c("red"), aesthetics = "colour")+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq))+
scale_color_manual(values=c( "red"))+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
################################################################################
# Graph 2: Time series plot of animal adoptions by animal type
time_series <- function(in_out_df, animal, sep){
df <- in_out_df %>%
filter(outcome_type == "Adoption", animal_type %in% animal) %>%
mutate(date = substr(outcome_datetime, 1,7)) %>%
group_by(date) %>%
mutate(total_freq = length(date)) %>%
group_by_(.dots=c("date", "animal_type")) %>%
mutate(sep_freq = length(animal_type)) %>%
ungroup() %>%
filter(date != min(date), date != max(date)) %>%
select(date, animal_type, age_upon_outcome_.days., sex_upon_outcome,total_freq, sep_freq)
if(sep){
ggplot(df, aes(x = date, y = sep_freq, color = animal_type, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Animal: %s<br>Adoptions: %s", date, animal_type, sep_freq))) + geom_line(aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Adoptions")+
ggtitle(paste(toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
} else {
ggplot(df, aes(x = date, y = total_freq, group = animal_type))+
geom_point(aes(text=sprintf("Date: %s<br>Total Adoptions: %s", date, total_freq))) + geom_line( aes(text = ""))+
scale_x_discrete("Date",
breaks = c("2014-01", "2015-01", "2016-01", "2017-01", "2018-01"),
labels = c("2014-01" = "2014",
"2015-01" = "2015",
"2016-01" = "2016",
"2017-01" = "2017",
"2018-01" = "2018"))+
ylab("Total Adoptions")+
ggtitle(paste("Total", toString(animal), "Adoption Trends between 2014 and 2018"))+
theme_bw()
}
}
plot <- time_series(in_out_df, c("Dog"), F)
plotly <- ggplotly(plot, tooltip = "text") %>%
style( hoveron = "text")
plotly
